{"version":3,"sources":["selectors/laptimes.js","TrackdayImola.png","components/Item.js","components/Navbar.js","App.js","query-configs/laptimes.js","store.js","index.js"],"names":["getLaptimes","state","entities","laptimes","Item","props","c","lap","pos","date","Date","parseInt","laptime","className","style","backgroundImage","steamProfile","avatar","large","nickname","vehiclename","getMinutes","getSeconds","getMilliseconds","NavBar","href","target","rel","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","useSelector","laptimesSelectors","React","useState","sackTimes","setSackTimes","selectedClass","setSelectedClass","page","setPage","hasMore","setHasMore","options","value","label","useRequest","force","url","transform","body","update","prev","next","laptimesQueryConfigs","useEffect","length","concat","Fragment","src","heading","alt","defaultValue","onChange","e","dataLength","loader","textAlign","overflow","endMessage","laps","r","i","push","steamId","renderRest","reducer","combineReducers","entitiesReducer","queries","queriesReducer","store","createStore","applyMiddleware","queryMiddleware","superagentInterface","getQueries","ReactDOM","render","StrictMode","queriesSelector","document","getElementById","createElement","toDataURL","indexOf","classList","add"],"mappings":"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","file":"static/js/main.0c804625.chunk.js","sourcesContent":["export const getVehicles = state => state.entities.vehicles;\n\nexport const getLaptimes = state => state.entities.laptimes;","export default __webpack_public_path__ + \"static/media/TrackdayImola.e7c740aa.png\";","const Item = (props) => {\n\n    const { c, lap, pos } = props; \n\n    if(!lap)\n        return null;\n\n    let date = new Date(parseInt(lap.laptime));\n\n    // console.log(lap)\n\n    return (\n        <div className={c}>\n            <div className=\"pos\">{pos}</div>\n            <div className=\"pic\" style={{backgroundImage: `url(${lap.steamProfile.avatar.large})`}}></div>\n            <div className=\"name\">{lap.steamProfile.nickname}</div>\n            <div className=\"score vehicle\">{lap.vehiclename}</div>\n            <div className=\"score\">{`${date.getMinutes()}:${date.getSeconds()}.${date.getMilliseconds()}`}</div>\n        </div>\n    )\n}\nexport default Item;\n","const NavBar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"https://trollsimracing.no\" target=\"_blank\" rel=\"noreferrer\">TROLL SimRacing</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item active\">\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                    </li>\n                    {/* <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"/\">About</a>\n                    </li> */}\n                </ul>\n            </div>\n        </nav>\n    )\n}\nexport default NavBar;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRequest } from 'redux-query-react';\nimport * as laptimesQueryConfigs from './query-configs/laptimes';\nimport * as laptimesSelectors from './selectors/laptimes';\nimport heading from './TrackdayImola.png';\nimport Item from './components/Item';\nimport Select from 'react-select'\nimport NavBar from './components/Navbar';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst App = () => {\n\n\tconst validClasses = ['GTE', 'GT1', 'GT3', 'GT4'];\n\tconst laptimes = useSelector(laptimesSelectors.getLaptimes);\n\tconst [sackTimes, setSackTimes] = React.useState([]);\n\tconst [selectedClass, setSelectedClass] = React.useState(validClasses[0]);\n\tconst [page, setPage] = React.useState(0);\n\tconst [hasMore, setHasMore] = React.useState(true);\n\n\tconst options = [\n\t\t{ value: 'GTE', label: 'GTE' },\n\t\t{ value: 'GT1', label: 'GT1' },\n\t\t{ value: 'GT3', label: 'GT3' },\n\t\t{ value: 'GT4', label: 'GT4' }\n\t]\n\n\tuseRequest(laptimesQueryConfigs.laptimesRequest(selectedClass, page)); // <- defaulting to GTE class\n\n\tReact.useEffect(() => {\n\t\tsetHasMore(true);\n\t\tsetSackTimes([]);\n\t}, [selectedClass])\n\n\tReact.useEffect(() => {\n\t\tif (laptimes) {\n\t\t\tif (laptimes.length) {\n\t\t\t\tsetSackTimes(sackTimes.concat(laptimes));\n\t\t\t}\n\t\t\telse if (page > 0) {\n\t\t\t\t// Do nothing to the sack\n\t\t\t\tsetHasMore(false);\n\t\t\t}\n\t\t\telse\n\t\t\t\tsetSackTimes([]);\n\t\t}\n\t\t// eslint-disable-next-line\n\t}, [laptimes]);\n\n\tconst renderRest = (laps) => {\n\t\tlet r = [];\n\t\tfor (let i = 3; i <= laps.length; i++) {\n\t\t\tif (laps[i])\n\t\t\t\tr.push(<Item c=\"item\" lap={laps[i]} pos={i} key={`laptime-${laps[i].steamId}-${selectedClass}-${i}`} />);\n\t\t}\n\t\treturn r;\n\t}\n\n\tconst fetchData = () => {\n\t\tsetPage(page + 1);\n\t}\n\n\tif (selectedClass && sackTimes)\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<NavBar />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t<div className=\"container-fluid text-center\">\n\t\t\t\t\t\t\t\t<img src={heading} alt=\"Trackday@Imola\" className=\"img-fluid\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-lg-8 offset-lg-2 body mt-2\">\n\t\t\t\t\t\t\t<div className=\"blackbox\">\n\t\t\t\t\t\t\t\t<div className='text-center'>\n\t\t\t\t\t\t\t\t\t<h1>TROLL SimRacing presents Trackday@Imola! [BETA]</h1>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tGT cars - real time (CET) and weather. Dont be a dick, show respect!<br />\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://discord.com/invite/G5a5MJp5Zn\">Discord.gg/G5a5MJp5Zn</a> | Have a great trackday!!<br />\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\n\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mb-5 pl-5 pr-5 mt-2\"\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={options[0]}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetPage(0);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetHasMore(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedClass(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{!!sackTimes.length &&\n\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"top3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item c=\"two item\" lap={sackTimes[1]} pos={2} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item c=\"one item\" lap={sackTimes[0]} pos={1} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item c=\"three item\" lap={sackTimes[2]} pos={3} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfiniteScroll\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataLength={sackTimes.length} //This is important field to render the next data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext={fetchData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thasMore={hasMore}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tloader={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Loading more laptimes</b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='list'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflow: 'unset'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tendMessage={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Yay! You have seen it all</b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{renderRest(sackTimes)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InfiniteScroll>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\treturn <p>Loading data</p>;\n}\nexport default App;","export const vehiclesRequest = () => {\n  return {\n    url: `https://api.trollsimracing.no:8080/classes`,\n    transform: body => ({\n      vehicles: body,\n    }),\n    update: {\n      vehicles: (prev, next) => {\n        return next;\n      },\n    },\n  };\n}\n\nexport const laptimesRequest = (c,page) => {\n  return {\n    force: true,\n    url: `https://api.trollsimracing.no:8080/class/${c}/${page}`,\n    transform: body => ({\n      laptimes: body,\n    }),\n    update: {\n      laptimes: (prev, next) => {\n        return next;\n      },\n    },\n  };\n}","import { applyMiddleware, createStore, combineReducers } from 'redux';\nimport { entitiesReducer, queriesReducer, queryMiddleware } from 'redux-query';\nimport superagentInterface from 'redux-query-interface-superagent';\n\nexport const getQueries = state => state.queries;\nexport const getEntities = state => state.entities;\n\nconst reducer = combineReducers({\n  entities: entitiesReducer,\n  queries: queriesReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(queryMiddleware(superagentInterface, getQueries, getEntities)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Provider as ReduxQueryProvider } from 'redux-query-react';\nimport App from './App';\nimport store from './store';\n\nimport './index.css';\n\nexport const getQueries = state => state.queries;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReduxQueryProvider queriesSelector={getQueries}>\n        <App />\n      </ReduxQueryProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst webp = e => document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') === 0;\n\nif(!webp())\n  document.body.classList.add('no-webp');"],"sourceRoot":""}